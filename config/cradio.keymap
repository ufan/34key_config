/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define COLEMAK 1
#define NUM     2
#define SYM     3
#define FUN     4

&mt {
   flavor = "tap-preferred";
   tapping_term_ms = <200>;
};

/ { 
    // macros
    macros {
      ZMK_MACRO(hello, // hello world
        wait-ms = <0>;
        tap-ms  = <10>;
        bindings = <&kp LS(H) &kp E &kp L &kp L &kp O>
        , <&kp COMMA>
        , <&kp W &kp O &kp R &kp L &kp D &kp EXCL>;
      )
    };
   
    // custom shift using mod-morph 
    behaviors {
      cmqus: comma_question {
        compatible = "zmk,behavior-mod-morph";
        label = "COMMA_QUESTION";
        #binding-cells = <0>;
        bindings = <&kp COMMA>, <&kp QUESTION>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
      };

      dtild: dot_tilde {
        compatible = "zmk,behavior-mod-morph";
        label = "DOT_TILDE";
        #binding-cells = <0>;
        bindings = <&kp DOT>, <&kp TILDE>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
      };
    };

    // combos
    combos {
        compatible = "zmk,combos";
        // right hand 
        combo_esc {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp ESC>;
        };
        
         combo_lgui {
            timeout-ms = <50>;
            key-positions = <5 6>;
            bindings = <&kp LGUI>;
        };
        
         combo_fullscreen {
            timeout-ms = <50>;
            key-positions = <25 26>;
            bindings = <&kp F11>;
        };
        
         combo_wkspc_up {
            timeout-ms = <50>;
            key-positions = <9 19>;
            bindings = <&kp LC(UP)>;
        };
        
         combo_wkspc_down {
            timeout-ms = <50>;
            key-positions = <19 29>;
            bindings = <&kp LC(DOWN)>;
        };

         combo_win_up {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp LS(LG(UP))>;
        };
        
         combo_win_down {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp LS(LG(DOWN))>;
        };

         combo_win_left {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp LS(LG(LEFT))>;
        };

         combo_win_right {
            timeout-ms = <50>;
            key-positions = <9 18>;
            bindings = <&kp LS(LG(RIGHT))>;
        };
 
         combo_rdelete {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp DELETE>;
        };
 
        // left hand 
        combo_zoomin {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&kp LC(PLUS)>;
        };
 
        combo_zoomout {
            timeout-ms = <50>;
            key-positions = <23 24>;
            bindings = <&kp LC(MINUS)>;
        };
 
        combo_pgdn {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp PG_DN>;
        };
 
        combo_pgup {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp PG_UP>;
        };

        combo_ldelete {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&kp DELETE>;
        };

        // symbols
        combo_underscore {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp UNDERSCORE>;
        };

        combo_minus {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp MINUS>;
        };

        // others
        combo_capswd {
            timeout-ms = <50>;
            key-positions = <2 7>;
            bindings = <&caps_word>;
        };

        combo_lsym {
            timeout-ms = <50>;
            key-positions = <30 33>;
            bindings = <&tog SYM>;
        };

        combo_lnum {
            timeout-ms = <50>;
            key-positions = <31 32>;
            bindings = <&tog NUM>;
        };

        combo_hello {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&hello>;
        };

        // output selection
        combo_outusb {
            timeout-ms = <50>;
            key-positions = <4 14>;
            bindings = <&out OUT_USB>;
        };
 
        combo_outble {
            timeout-ms = <50>;
            key-positions = <14 24>;
            bindings = <&out OUT_BLE>;
        };

        combo_outtog {
            timeout-ms = <50>;
            key-positions = <4 24>;
            bindings = <&out OUT_TOG>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
                
     		default_layer {
        		bindings = <
            		&kp Q &kp W      &kp E     &kp R     &kp T    &kp Y &kp U     &kp I      &kp O       &kp P
             		&lt FUN A &mt LSFT S &lt SYM D &lt NUM F &kp G    &kp H &lt NUM J &lt SYM K  &mt RSFT L  &lt FUN SQT 
                &kp Z &kp X      &kp C     &kp V     &kp B    &kp N &kp M     &cmqus     &dtild      &kp SEMI
          			              &mt LALT TAB  &mt LCTL SPACE    &mt RCTL RET    &mt RALT BSPC
             		>;
		    };

     		colemak_layer {
        		bindings = <
            		&kp Q &kp W      &kp F     &kp P     &kp B    &kp J &kp L     &kp U     &kp Y      &kp SQT
             		&lt FUN A &mt LSFT R &lt SYM S &lt NUM T &kp G    &kp M &lt NUM N &lt SYM E &mt RSFT I &lt FUN O
                &kp Z &kp X      &kp C     &kp D     &kp V    &kp K &kp H     &cmqus    &dtild     &kp SEMI
          			              &mt LALT TAB  &mt LCTL SPACE    &mt RCTL RET    &mt RALT BSPC
             		>;
		    };

        number_layer {
            bindings = <
                &bt BT_NXT  &none     &kp UP    &none      &none      &kp PLUS     &kp N7 &kp N8 &kp N9 &kp MINUS
                &bt BT_PRV  &kp LEFT  &kp DOWN  &kp RIGHT  &none      &kp ASTRK    &kp N4 &kp N5 &kp N6 &kp FSLH
                &bt BT_CLR  &none     &none     &none      &none      &kp EQUAL    &kp N1 &kp N2 &kp N3 &kp DOT
                                             &none      &kp HOME      &kp END         &kp N0
            >;
        };

        symbol_layer {
            bindings = <
                &none     &none    &kp LT    &kp GT   &kp PRCNT   &kp AMPS &kp CARET &kp LBRC &kp RBRC &tog COLEMAK
                &kp GRAVE &kp EXCL &kp MINUS &kp PLUS &kp EQUAL   &kp PIPE &kp COLON &kp LPAR &kp RPAR &kp AT
                &none     &none    &kp SLASH &kp STAR &kp BSLH    &kp HASH &kp DLLR  &kp LBKT &kp RBKT &none  
                                             &none    &none       &none    &none
            >;
        };
        
        function_layer {
            bindings = <
                &none     &none    &none  &none  &none   &kp F1  &kp F2  &kp F3  &kp F4  &none
                &none     &none    &none  &none  &none   &kp F5  &kp F6  &kp F7  &kp F8  &none
                &none     &none    &none  &none  &none   &kp F9  &kp F10 &kp F11 &kp F12 &none  
                                          &none  &none   &none    &none
            >;
        };
   	};
};
